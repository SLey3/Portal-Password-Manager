"""
Generator Module for Password Manager
"""
# Imports
from passwordmeter import test
from random import choice, randint
import string_utils

# Generator
words = open('words.txt', 'r').read().split('\n')
special_chars = ['!', '?', '%', '$', '*', '(', ')', '&', '@', '#', '^', '+', '=', '-', '_', '"', ';', ':', '<', '>', '/', '\\']

def create_password(num_words, num_numbers, num_special, Strengthen = False):
    """
    Generates Pasword out of User Input in the main window for the generator
    """
    #TODO Connect the arguments with wx for user customization.
    pass_str = ' '
    for _ in range(num_words):
        pass_str+=choice(words).lower().capitalize()
    for _ in range(num_numbers):
        pass_str+=str(randint(0,100))
    for _ in range(num_special):
        pass_str+=choice(special_chars)
    if Strengthen == True:
        pass_str = string_utils.shuffle(pass_str)
        pass_str = pass_str.replace(" ", "")
        return pass_str
    else:
        return pass_str
    return pass_str

def show_created_password(created_password):
    """
    Shows password generated by generator
    """
   
    pass_str = created_password
    strength,_=test(pass_str)
    #TODO make print statements into wx form in the mainapp.py file or through a different wx method
    print('\nPassword: %s'%pass_str)
    print('Strength: %0.5f'%strength)

def main():
    pass_str = create_password(2, 4, 3, True)
    show_created_password(pass_str)

if __name__ == '__main__':
    main()